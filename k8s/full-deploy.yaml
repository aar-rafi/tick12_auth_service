# ConfigMap for API URLs and Redis/Database Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: template-config
data:
  AUTH_SERVICE_URL: "https://service.district12.xyz/auth"
  VITE_AUTH_API_URL: "https://service.district12.xyz/auth"
  VITE_PAYMENT_API_URL: "https://service.district12.xyz/pay"
  VITE_DOWNLOAD_API_URL: "https://service.district12.xyz/down"
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
data:
  POSTGRES_PASSWORD: QVZOU19XdW5kSDhpM2hIdFZJblRLZFhr
---
# auth-service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tick12-auth-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: tick12-auth-service
          image: ishrakadit07/tick12_auth_service
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: template-config
            - secretRef:
                name: postgres-secret
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# auth-service Service
apiVersion: v1
kind: Service
metadata:
  name: tick12-auth-service
spec:
  selector:
    app: auth
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP
---
# ticket-service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tick12-ticket-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ticket
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ticket
    spec:
      containers:
        - name: tick12-ticket-service
          image: ishrakadit07/tick12_ticket_service
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
          envFrom:
            - configMapRef:
                name: template-config
            - secretRef:
                name: postgres-secret
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# ticket-service Service
apiVersion: v1
kind: Service
metadata:
  name: tick12-ticket-service
spec:
  selector:
    app: ticket
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001
  type: ClusterIP
---
# train-service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tick12-train-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: train
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: train
    spec:
      containers:
        - name: tick12-train-service
          image: ishrakadit07/tick12_train_service
          imagePullPolicy: Always
          ports:
            - containerPort: 8003
          envFrom:
            - configMapRef:
                name: template-config
            - secretRef:
                name: postgres-secret
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# train-service Service
apiVersion: v1
kind: Service
metadata:
  name: tick12-train-service
spec:
  selector:
    app: train
  ports:
    - protocol: TCP
      port: 8003
      targetPort: 8003
  type: ClusterIP
---
# price-service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tick12-price-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: price
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: price
    spec:
      containers:
        - name: tick12-price-service
          image: ishrakadit07/tick12_price_service
          imagePullPolicy: Always
          ports:
            - containerPort: 8002
          envFrom:
            - configMapRef:
                name: template-config
            - secretRef:
                name: postgres-secret
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# price-service Service
apiVersion: v1
kind: Service
metadata:
  name: tick12-price-service
spec:
  selector:
    app: price
  ports:
    - protocol: TCP
      port: 8002
      targetPort: 8002
  type: ClusterIP
---
# Horizontal Pod Autoscaler for auth-service
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: auth-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tick12-auth-deploy
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---
# Horizontal Pod Autoscaler for ticket-service
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: ticket-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tick12-ticket-deploy
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---
# Horizontal Pod Autoscaler for train-service
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: train-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tick12-train-deploy
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---
# Horizontal Pod Autoscaler for price-service
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: price-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tick12-price-deploy
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80